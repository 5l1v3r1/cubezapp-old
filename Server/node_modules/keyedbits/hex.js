var KBBuffer = require('./KBBuffer').KBBuffer;

exports.characters = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
                      'a', 'b', 'c', 'd', 'e', 'f'];

exports.encodeUnit = function(unit) {
    if (unit < 0 || unit >= 16) {
        throw 'Invalid unit range';
    }
    return exports.characters[unit];
}

exports.decodeUnit = function(aChar) {
    var index = exports.characters.indexOf(aChar.toLowerCase());
    return index;
}

exports.encode = function(buffer) {
    if (typeof buffer != 'object') return null;
    if (buffer.constructor.name != 'KBBuffer') return null;
    
    var str = '';
    for (var i = 0; i < buffer.length; i++) {
        var aChar = buffer.array[i];
        str += exports.encodeUnit(aChar >> 4);
        str += exports.encodeUnit(aChar & 0xf);
    }
    return str;
}

exports.decode = function(string) {
    if (typeof string != 'string') return null;
    
    if (string.length % 2 != 0) {
        return null;
    }
    var buff = new KBBuffer(string.length / 2);
    for (var i = 0; i < string.length; i += 2) {
        var unit1 = exports.decodeUnit(string[i]);
        if (unit1 < 0) return null;
        var unit2 = exports.decodeUnit(string[i + 1]);
        if (unit2 < 0) return null;
        var aChar = (unit1 << 4) | unit2;
        buff.write(aChar);
    }
    return buff;
}

var KBBuffer = require('keyedbits').buffer;
var mongo = require('mongodb');

/**
 * Input may be: KBBuffer(), Buffer(), or Binary()
 * Output type may be 'KBBuffer', 'Buffer', or 'Binary'
 */
exports.convertData = function (input, outType) {
    if (typeof input != 'object') {
        throw 'Invalid input type';
    }
    if (['KBBuffer', 'Buffer', 'Binary'].indexOf(outType) < 0) {
        throw 'Invalid output type';
    }
    if (input.constructor.name == 'KBBuffer') {
        if (outType == 'Buffer') {
            return new Buffer(input.array.slice(0, input.length));
        } else if (outType == 'Binary') {
            return new mongo.Binary(exports.convertData(input, 'Buffer'));
        }
    } else if (input.constructor.name == 'Buffer') {
        if (outType == 'KBBuffer') {
            var myBuff = new KBBuffer(input.length);
            for (var i = 0; i < input.length; i++) {
                myBuff.write(input.readUInt8(i));
            }
            return myBuff;
        } else if (outType == 'Binary') {
            return new Binary(input);
        }
    } else if (input.constructor.name == 'Binary') {
        if (outType == 'KBBuffer') {
            var buffer = exports.convertData(input, 'Buffer');
            return exports.convertData(buffer, outType);
        } else if (outType == 'Buffer') {
            return input.read(0, input.length);
        }
    } else {
        throw 'Invalid object constructor given';
    }
    return input;
}

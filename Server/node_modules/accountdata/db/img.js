/**
 * This module will maintain the internal image database
 * used for storing users' puzzle images.
 */

var hex = require('keyedbits').hex;
var fs = require('fs');
var convert = require('./convert.js');

// here we define our image database class
function ImageDb(imgPath) {
    this.imgPath = imgPath;
}

ImageDb.prototype.imagePath = function(anId) {
    var stringId = hex.encode(anId);
    if (!stringId) throw 'Invalid id type';
    return this.imgPath + '/' + stringId;
}

ImageDb.prototype.imageExists = function(anId, callback) {
    fs.exists(this.imagePath(anId), function (exists) {
        callback(exists);
    });
}

ImageDb.prototype.deleteImage = function(anId, callback) {
    fs.unlink(this.imagePath(anId), callback);
}

ImageDb.prototype.writeImage = function(anId, buffer, callback) {
    // convert buffer to a Buffer object
    var buff = convert.convertData(buffer, 'Buffer');
    fs.writeFile(this.imagePath(anId), buff, function (err) {
        callback(err);
    });
}

// TODO: include methods for looking up used image IDs in the database

exports.ImageDb = ImageDb;
